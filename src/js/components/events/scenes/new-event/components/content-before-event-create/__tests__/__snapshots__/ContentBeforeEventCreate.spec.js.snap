// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ContentBeforeCommunitySubmit it renders correctly 1`] = `
<styled.div>
  <p>
    A few details about your event, and you're on your way!
  </p>
  <div
    className="submit-form"
  >
    <Form
      as="form"
      error={false}
    >
      <Message
        error={true}
        header="Error"
      />
      <FormField
        className="wide email-holder"
      >
        <label>
          What's the name of your event?
          <sup>
            *
          </sup>
        </label>
        <Styled(Input)
          name="title"
          onChange={[Function]}
          placeholder="Event title"
          type="text"
        />
      </FormField>
      <FormField
        className="wide email-holder"
      >
        <label>
          When does it start?
          <sup>
            *
          </sup>
        </label>
        <[object Object]
          dateFormat="MMMM d, yyyy h:mm aa"
          onChange={[Function]}
          showTimeSelect={true}
          todayButton="Today"
        />
      </FormField>
      <FormField
        className="wide email-holder"
      >
        <label>
          Where is the venue?
        </label>
        <Styled(PlaceSelector)
          locationField="location"
        />
      </FormField>
      <FormField
        className="wide email-holder"
      >
        <label>
          In a tweet (280 characters or less), tell your target audience why they should care about/attend this event.
          <sup>
            *
          </sup>
        </label>
        <Styled(Component)
          maxLength={280}
          name="goals"
          onChange={[Function]}
          placeholder="Event goals in a sentence or two."
          type="text"
        />
        <small>
          280
           characters left.
        </small>
      </FormField>
      <FormField
        className="search-holder"
      >
        <label>
          Which industry would you classify this event under?
          <sup>
            *
          </sup>
        </label>
        <Styled(Input)
          className="select-search"
          name="category_name"
          onChange={[Function]}
          options={
            Array [
              Object {
                "key": "Technology",
                "text": "Technology",
                "value": "Technology",
              },
              Object {
                "key": "Education",
                "text": "Education",
                "value": "Education",
              },
              Object {
                "key": "Automotive/Transportation",
                "text": "Automotive/Transportation",
                "value": "Automotive/Transportation",
              },
              Object {
                "key": "Agriculture/Food and Beverage",
                "text": "Agriculture/Food and Beverage",
                "value": "Agriculture/Food and Beverage",
              },
              Object {
                "key": "Business",
                "text": "Business",
                "value": "Business",
              },
              Object {
                "key": "Construction/Real Estate",
                "text": "Construction/Real Estate",
                "value": "Construction/Real Estate",
              },
              Object {
                "key": "Defence/Space",
                "text": "Defence/Space",
                "value": "Defence/Space",
              },
              Object {
                "key": "Entertainment/Media",
                "text": "Entertainment/Media",
                "value": "Entertainment/Media",
              },
              Object {
                "key": "Hospitality",
                "text": "Hospitality",
                "value": "Hospitality",
              },
              Object {
                "key": "Energy/Oil and Gas",
                "text": "Energy/Oil and Gas",
                "value": "Energy/Oil and Gas",
              },
              Object {
                "key": "Finance/Banking",
                "text": "Finance/Banking",
                "value": "Finance/Banking",
              },
              Object {
                "key": "Government/Not-for-Profit",
                "text": "Government/Not-for-Profit",
                "value": "Government/Not-for-Profit",
              },
              Object {
                "key": "Healthcare/BioTech",
                "text": "Healthcare/BioTech",
                "value": "Healthcare/BioTech",
              },
              Object {
                "key": "Logistics",
                "text": "Logistics",
                "value": "Logistics",
              },
              Object {
                "key": "Manufacturing",
                "text": "Manufacturing",
                "value": "Manufacturing",
              },
              Object {
                "key": "Professional Services(Legal, Insurance, Accounting, HR, Marketing)",
                "text": "Professional Services(Legal, Insurance, Accounting, HR, Marketing)",
                "value": "Professional Services(Legal, Insurance, Accounting, HR, Marketing)",
              },
              Object {
                "key": "Retail and E-Commerce",
                "text": "Retail and E-Commerce",
                "value": "Retail and E-Commerce",
              },
              Object {
                "key": "Relationships",
                "text": "Relationships",
                "value": "Relationships",
              },
              Object {
                "key": "Religion",
                "text": "Religion",
                "value": "Religion",
              },
              Object {
                "key": "Security",
                "text": "Security",
                "value": "Security",
              },
              Object {
                "key": "Self-Development",
                "text": "Self-Development",
                "value": "Self-Development",
              },
              Object {
                "key": "Telecommunications",
                "text": "Telecommunications",
                "value": "Telecommunications",
              },
              Object {
                "key": "Women",
                "text": "Women",
                "value": "Women",
              },
              Object {
                "key": "Other",
                "text": "Other",
                "value": "Other",
              },
            ]
          }
          placeholder="Education"
          search={true}
          type="text"
        />
      </FormField>
      <FormField>
        <label>
          How'd you like people to visit your event page?
          <sup>
            *
          </sup>
        </label>
        <FormField
          className="same-line"
        >
          eventplog.com
          /e/
          <Styled(Input)
            name="slug"
            onChange={[Function]}
            placeholder="amazing-event"
          />
        </FormField>
      </FormField>
      <FormField
        className="search-holder"
      >
        <label>
          Which of the communities you admin own this event? Create one if none applies? :)
          <sup>
            *
          </sup>
        </label>
        <div
          className="same-line"
        >
          <Styled(SearchBox)
            className="select-search"
            handleSelect={[Function]}
            options={Array []}
          />
          <Modal
            closeOnDimmerClick={true}
            closeOnDocumentClick={false}
            dimmer={true}
            eventPool="Modal"
            style={
              Object {
                "marginLeft": "auto",
                "marginRight": "auto",
                "marginTop": "0px !important",
              }
            }
            trigger={
              <Button>
                <Icon
                  as="i"
                  name="plus"
                />
              </Button>
            }
          >
            <Component
              isModal={true}
            />
          </Modal>
        </div>
      </FormField>
      <Button
        className="btn-create"
      >
        Create
      </Button>
    </Form>
  </div>
</styled.div>
`;
